@using Domain.Entity.Settings
@model List<Products>
<!-- Left Section: List -->

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-3">
     <h5 class="mb-0 text-dark dark__text-light">Product List <strong>(@Model.Count)</strong></h5>
 
    </div>

    <!-- Search -->
    <div class="input-group input-search-width mb-3">
        <input class="form-control form-control-sm shadow-none form-rounded w-95"
               type="search"
               placeholder="Search by name"
           aria-label="search"  
           id="productSearch"
           onkeyup="filterProduct()" />
        <button class="btn btn-sm btn-outline-primary">
              <i class="fa fa-search"></i>  
            
        </button>
    </div>

 
    <!-- Items List -->
<div class="list-group" id="modelList" style="max-height: 400px; overflow-y: auto;">
        @foreach (var prod in Model)
    {
        <div class="model-item">
            <p class="d-flex justify-content-between align-items-center border-bottom py-2 mb-0">
                <span class="text-dark dark__text-light">@prod.ProdName (@prod.Sku)  
                    <span class="text-muted small">(In Stock: @prod.OpeningQnty @prod.UnitName )</span>
                    </span>
               
                 
                <button class="btn btn-sm btn-outline-primary"
                        data-product-id="@prod.ProductId"
                onclick="LoadEditModeData('@prod.ProductId')">
                    <i class="fa fa-edit me-1"></i>
                </button>
               @*  <button class="btn btn-sm btn-outline-primary"
                        data-product-id="@prod.ProductId"
                        onclick="LoadSimilarEditModeData('@prod.ProductId')">
                     copy
                </button> *@
            </p>
        </div>
    }
         
 </div>


<script>
    function filterProduct() {
        // Get the search term
        const searchInput = document.getElementById('productSearch');
        const filter = searchInput.value.toLowerCase();
      
        // Get all the unit items
        const list = document.getElementById('modelList');
        const items = list.getElementsByClassName('model-item');

        // Loop through the items and toggle visibility
        for (let i = 0; i < items.length; i++) {
            const name = items[i].querySelector('span').textContent.toLowerCase();

            // Show or hide the item based on the search term
            if (name.indexOf(filter) > -1) {
                items[i].style.display = "block"; // Show matching item
            } else {
                items[i].style.display = "none"; // Hide non-matching item
            }
        }
    }
</script>