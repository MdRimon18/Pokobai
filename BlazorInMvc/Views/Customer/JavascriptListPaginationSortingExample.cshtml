<div class="card mb-3" id="customersTable">
    <div class="card-header">
        <div class="row flex-between-center">
            <div class="col-4 col-sm-auto d-flex align-items-center pe-0">
                <h5 class="fs-9 mb-0 text-nowrap py-2 py-xl-0">Customers</h5>
            </div>
            <div class="col-8 col-sm-auto text-end ps-2">
                <div class="d-none" id="table-customers-actions">
                    <div class="d-flex">
                        <select class="form-select form-select-sm" aria-label="Bulk actions" id="bulk-action-select">
                            <option selected="">Bulk actions</option>
                            <option value="Delete">Delete</option>
                            <option value="Archive">Archive</option>
                        </select>
                        <button class="btn btn-falcon-default btn-sm ms-2" type="button" onclick="applyBulkAction()">Apply</button>
                    </div>
                </div>
                <div id="table-customers-replace-element">
                    <button class="btn btn-falcon-default btn-sm" type="button"><span class="fas fa-plus" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block ms-1">New</span></button>
                    <button class="btn btn-falcon-default btn-sm mx-2" type="button"><span class="fas fa-filter" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block ms-1">Filter</span></button>
                    <button class="btn btn-falcon-default btn-sm" type="button"><span class="fas fa-external-link-alt" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block ms-1">Export</span></button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive scrollbar">
            <table class="table table-sm table-striped fs-10 mb-0 overflow-hidden">
                <thead class="bg-200">
                    <tr>
                        <th>
                            <div class="form-check fs-9 mb-0 d-flex align-items-center">
                                <input class="form-check-input" id="checkbox-bulk-customers-select" type="checkbox" data-bulk-select='{"body":"table-customers-body","actions":"table-customers-actions","replacedElement":"table-customers-replace-element"}' />
                            </div>
                        </th>
                        <th class="text-900 sort pe-1 align-middle white-space-nowrap sortable-header" data-sort="name" onclick="sortTable('customerName')">Name <i class="fas fa-sort"></i></th>
                        <th class="text-900 sort pe-1 align-middle white-space-nowrap sortable-header" data-sort="email" onclick="sortTable('email')">Email <i class="fas fa-sort"></i></th>
                        <th class="text-900 sort pe-1 align-middle white-space-nowrap sortable-header" data-sort="phone" onclick="sortTable('mobileNo')">Phone <i class="fas fa-sort"></i></th>
                        <th class="text-900 sort pe-1 align-middle white-space-nowrap ps-5 sortable-header" data-sort="address" style="min-width: 200px;" onclick="sortTable('custAddrssOne')">Billing Address <i class="fas fa-sort"></i></th>
                        <th class="text-900 sort pe-1 align-middle white-space-nowrap sortable-header" data-sort="joined" onclick="sortTable('entryDateTime')">Joined <i class="fas fa-sort"></i></th>
                        <th class="align-middle no-sort"></th>
                    </tr>
                </thead>
                <tbody class="list" id="table-customers-body">
                    <!-- Rows will be populated by JavaScript -->
                </tbody>
            </table>
            <div class="text-center d-none" id="customers-table-fallback">
                <p class="fw-bold fs-8 mt-3">No customers found</p>
            </div>
        </div>
    </div>
    <div class="card-footer d-flex align-items-center justify-content-center">
        <span id="pagination-info" class="me-3"></span>
        <button class="btn btn-sm btn-falcon-default me-1" type="button" title="Previous" onclick="changePage(currentPage - 1)"><span class="fas fa-chevron-left"></span></button>
        <ul class="pagination mb-0"></ul>
        <button class="btn btn-sm btn-falcon-default ms-1" type="button" title="Next" onclick="changePage(currentPage + 1)"><span class="fas fa-chevron-right"></span></button>
    </div>
</div>

<script>
    let currentPage = 1;
    let pageSize = 10;
    let sortOrder = 'asc';
    let sortField = 'customerName';
    let customers = [];
    let totalPages = 0;
    let totalRecords = 0;

    document.addEventListener("DOMContentLoaded", function () {
        loadCustomers();
        document.getElementById("checkbox-bulk-customers-select").addEventListener("change", toggleSelectAll);
    });

    window.loadCustomers = async function () {
        const tbody = document.getElementById("table-customers-body");
        tbody.innerHTML = "";

        try {
            const response = await fetch(`/api/Customer/GetAll?page=${currentPage}&pageSize=${pageSize}`);
            const data = await response.json();
            customers = data.items;
            totalPages = data.totalPages;
            totalRecords = data.totalRecord;
            renderCustomers();
            updatePagination();
            updatePaginationInfo();
        } catch (error) {
            console.error('Error fetching customers:', error);
        }
    }
     function changePage(page) {
        if (page < 1 || page > totalPages) return;
        currentPage = page;
        loadCustomers();
    }

    function handlePageSizeChanged(newSize) {
        pageSize = newSize;
        currentPage = 1;
        loadCustomers();
    }

    function onRefresh() {
        loadCustomers();
    }

    function sortTable(field) {
        if (sortField === field) {
            sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
        } else {
            sortField = field;
            sortOrder = 'asc';
        }
        renderCustomers();
    }

    function updatePagination() {
        const pagination = document.querySelector('.pagination');
        pagination.innerHTML = '';

        const maxPagesToShow = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
        let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

        if (startPage > 1) {
            pagination.innerHTML += `<li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="changePage(1)">1</a></li>`;
            if (startPage > 2) {
                pagination.innerHTML += `<li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="changePage(${startPage - 1})">...</a></li>`;
            }
        }

        for (let i = startPage; i <= endPage; i++) {
            const li = document.createElement('li');
            li.className = `page-item ${i === currentPage ? 'active' : ''}`;
            li.innerHTML = `<a class="page-link" href="javascript:void(0)" onclick="changePage(${i})">${i}</a>`;
            pagination.appendChild(li);
        }

        if (endPage < totalPages) {
            if (endPage < totalPages - 1) {
                pagination.innerHTML += `<li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="changePage(${endPage + 1})">...</a></li>`;
            }
            pagination.innerHTML += `<li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="changePage(${totalPages})">${totalPages}</a></li>`;
        }
    }
      function updatePaginationInfo() {
        const paginationInfo = document.getElementById("pagination-info");
        paginationInfo.innerText = `Page ${currentPage} of ${totalPages}, Total Records: ${totalRecords}`;
    }

    
    function renderCustomers() {
        const tbody = document.getElementById("table-customers-body");
        tbody.innerHTML = "";

        const sortedCustomers = customers.sort((a, b) => {
            if (a[sortField] < b[sortField]) return sortOrder === 'asc' ? -1 : 1;
            if (a[sortField] > b[sortField]) return sortOrder === 'asc' ? 1 : -1;
            return 0;
        });

        sortedCustomers.forEach(item => {
            const row = document.createElement("tr");
            row.innerHTML = `
                <td class="align-middle py-2" style="width: 28px;">
                    <div class="form-check fs-9 mb-0 d-flex align-items-center">
                        <input class="form-check-input" type="checkbox" id="customer-${item.customerId}" data-bulk-select-row="data-bulk-select-row" />
                    </div>
                </td>
                <td class="name align-middle white-space-nowrap py-2">
                    <a href="../../app/e-commerce/customer-details.html">
                        <div class="d-flex d-flex align-items-center">
                            <div class="avatar avatar-xl me-2">
                                <div class="avatar-name rounded-circle"><span>${item.customerName[0]}</span></div>
                            </div>
                            <div class="flex-1">
                                <h5 class="mb-0 fs-10">${item.customerName}</h5>
                            </div>
                        </div>
                    </a>
                </td>
                <td class="email align-middle py-2"><a href="mailto:${item.email}">${item.email}</a></td>
                <td class="phone align-middle white-space-nowrap py-2"><a href="tel:${item.mobileNo}">${item.mobileNo}</a></td>
                <td class="address align-middle white-space-nowrap ps-5 py-2">${item.custAddrssOne}</td>
                <td class="joined align-middle py-2">${item.entryDateTime}</td>
                <td class="align-middle white-space-nowrap py-2 text-end">
                    <div class="dropdown font-sans-serif position-static">
                        <button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal" type="button" id="customer-dropdown-${item.customerId}" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-10"></span></button>
                        <div class="dropdown-menu dropdown-menu-end border py-0" aria-labelledby="customer-dropdown-${item.customerId}">
                            <div class="py-2"><a class="dropdown-item" href="#!">Edit</a><a class="dropdown-item text-danger" href="#!">Delete</a></div>
                        </div>
                    </div>
                </td>
            `;
            tbody.appendChild(row);
            document.getElementById(`customer-${item.customerId}`).addEventListener("change", toggleBulkActions);
        });
    }

    function toggleSelectAll() {
        const selectAllCheckbox = document.getElementById("checkbox-bulk-customers-select");
        const checkboxes = document.querySelectorAll("#table-customers-body .form-check-input");
        checkboxes.forEach(checkbox => {
            checkbox.checked = selectAllCheckbox.checked;
        });
        toggleBulkActions();
    }

    function toggleBulkActions() {
        const checkboxes = document.querySelectorAll("#table-customers-body .form-check-input");
        const anyChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);
        const actionsElement = document.getElementById("table-customers-actions");
        const replaceElement = document.getElementById("table-customers-replace-element");
        if (anyChecked) {
            actionsElement.classList.remove("d-none");
            replaceElement.classList.add("d-none");
        } else {
            actionsElement.classList.add("d-none");
            replaceElement.classList.remove("d-none");
        }
    }

    async function applyBulkAction() {
        const selectedAction = document.getElementById("bulk-action-select").value;
        const selectedCustomers = Array.from(document.querySelectorAll("#table-customers-body .form-check-input:checked"))
            .map(checkbox => checkbox.id.replace("customer-", ""));

        if (selectedCustomers.length === 0) {
            alert("No customers selected.");
            return;
        }
        console.log(selectedAction, selectedCustomers);
        try {
            const response = await fetch(`/api/Customer/BulkAction`, {
                method: "POST", 
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    action: selectedAction,
                    customerIds: selectedCustomers
                })
            });


            if (response.ok) {
                alert("Bulk action applied successfully.");
                loadCustomers();
            } else {
                alert("Failed to apply bulk action.");
            }
        } catch (error) {
            console.error("Error applying bulk action:", error);
        }
    }
</script>