@using Domain.Entity.Settings
@model List<ProductCategories>
<!-- Left Section: List -->

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-3">
    <h5 class="mb-0 text-dark dark__text-light">Category List <strong>(@Model.Count)</strong></h5>
 
    </div>

    <!-- Search -->
    <div class="input-group input-search-width mb-3">
        <input class="form-control form-control-sm shadow-none form-rounded w-95"
               type="search"
               placeholder="Search by name"
           aria-label="search"  
           id="productCtgrySearch"
           onkeyup="filterProductSize()" />
        <button class="btn btn-sm btn-outline-primary">
              <i class="fa fa-search"></i>  
            
        </button>
    </div>

 
    <!-- Items List -->
<div class="list-group" id="modelList" style="max-height: 300px; overflow-y: auto;">
        @foreach (var ctg in Model)
    { 
        <div class="model-item row" >
            <p class="d-flex justify-content-between align-items-center border-bottom py-2 mb-0">
                <div class="col-sm-3">
                    <div class="avatar avatar-2xl">
                        @if (!string.IsNullOrEmpty(ctg.ImageUrl))
                        {
                            <img class="rounded-circle" src="@ctg.ImageUrl" alt="" />
                        }
                        else
                        {
                            <img src="/assets/commonimage/no-image.png" />
                        }
                    </div>
                </div>
                <div class="col-sm-4">
                    <span class="text-dark dark__text-light">@ctg.ProdCtgName</span>
                </div>
                <div class="col-sm-2">
                   
                    <button class="btn btn-sm btn-outline-primary" onclick="LoadEditModeDataUnit('@ctg.ProdCtgId')">
                        <i class="fa fa-edit me-1"></i>
                    </button>
                </div>
             
            </p>
        </div>
    }
         
 </div>
 

<script>
    function LoadEditModeDataUnit(id) {
        $.ajax({
            url: '/ProductCategory/LoadEditModeData', // Your action URL
            type: 'GET', // Use GET method
            data: { id: id }, // Send the ID as a query string parameter
            success: function (result) {
                // On success, replace the content of a container with the returned partial view
                $('#AddContainer').html(result);
            },
            error: function (xhr, status, error) {
                console.log('Error:', error);
                alert('An error occurred while loading the data. Please try again.');
            }
        });
    }
</script>
<script>
    function filterProductSize() {
        // Get the search term
        const searchInput = document.getElementById('productCtgrySearch');
        const filter = searchInput.value.toLowerCase();
      
        // Get all the unit items
        const list = document.getElementById('modelList');
        const items = list.getElementsByClassName('model-item');
        
        // Loop through the items and toggle visibility
        for (let i = 0; i < items.length; i++) {
            const name = items[i].querySelector('span').textContent.toLowerCase();

            // Show or hide the item based on the search term
            if (name.indexOf(filter) > -1) {
                items[i].style.display = "block"; // Show matching item
            } else {
                items[i].style.display = "none"; // Hide non-matching item
            }
        }
    }
</script>